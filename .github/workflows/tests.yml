name: PROJECT_NAME Lint and Tests
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Check code
        run: bundle exec rubocop

  rspec-test:
    name: RSpec
    needs: rubocop-test
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DB_HOST: 127.0.0.1
      DB_USER: root
      DB_PASSWORD: msql_strong_password
      DB_NAME: PROJECT_NAME_app_test
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: msql_strong_password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2

      - name: Copy database yml
        run: mv ./config/database.ci.yml ./config/database.yml

      - name: Copy env file
        run: mv .env.sample .env

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Get Yarn Cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node Modules
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache Assets
        id: assets-cache
        uses: actions/cache@v2
        with:
          path: public/packs-test
          key: ${{ runner.os }}-assets-${{ steps.extract_branch.outputs.branch }}
          restore-keys: |
            ${{ runner.os }}-assets-
      - name: Yarn Install
        run: bin/rails yarn:install

      - name: Compile Assets
        shell: bash
        run: |
          if [[ ! -d public/packs-test ]]; then
            bin/rails webpacker:compile
          else
            echo "No need to compile assets."
          fi
      - name: Setup DB
        run: bin/rails db:create db:migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Run tests
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: bundle exec rspec
